package com.lms.controller;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.lms.entity.LearnerUser;
import com.lms.exception.DbException;
import com.lms.service.LearnerUserService;

@RestController
@RequestMapping("/user")
public class LearnerUserController {

	@Autowired
	private DataSource ds;

	@Autowired
	private LearnerUserService lus;

	@GetMapping("/testdb")
	public ResponseEntity<String> testdb() throws SQLException {

		try (Connection c = ds.getConnection()) {
			throw new DbException("Db Not Connected");
		} catch (Exception e) {
			return ResponseEntity.ok("Db Connected");

		}

	}

	@GetMapping("/login1")
	public String login() {
		return "Connected To Back-End";

	}

	@PostMapping("/signup")
	public LearnerUser signUp(@RequestBody LearnerUser lu) {

		return lus.saveLU(lu);
	}

	@PostMapping("/login")
	public ResponseEntity<String> login1(@RequestBody LearnerUser lu) {

		lu.setName("");

		LearnerUser getby = lus.getby(lu);

		Pattern pattern1 = Pattern.compile("@gmail\\.com$");
		Matcher matcher1 = pattern1.matcher(getby.getEmail());
		boolean find1 = matcher1.find();

		Pattern pattern2 = Pattern.compile("@digital-edify\\.com$");
		Matcher matcher2 = pattern2.matcher(getby.getEmail());
		boolean find2 = matcher2.find();

		if (getby == null) {
			return new ResponseEntity<String>("User Not Found", HttpStatus.NOT_FOUND);
		}

		else if (find2 == true) {

			return new ResponseEntity<String>("Welcome " + getby.getName(), HttpStatus.FOUND);

		} else if (find1 == true) {

			return new ResponseEntity<String>("Welcome " + getby.getName(), HttpStatus.FOUND);
		} else {

			return new ResponseEntity<String>("User Not Found", HttpStatus.NOT_FOUND);
		}

	}

}
