package com.lms.controller;

import java.sql.Connection;
import java.sql.SQLException;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.lms.entity.LearnerUser;

@RestController
@RequestMapping("/user")
public class LearnerUserController {

	@Autowired
	private DataSource ds;

	@PostMapping("/save")
	public LearnerUser save(@RequestBody LearnerUser lu) {

		return null;

	}

	@GetMapping("/your-endpoint")
	public ResponseEntity<String> yourEndpoint() throws SQLException {
		try {
			// Attempt to connect to the database with the provided password
			// If the password is incorrect or there's a database connection issue, handle
			// the exception
			// For example, you can catch a SQLException or a custom exception and return an
			// error response.
			// Simulating a database connection error for illustration purposes
			try (Connection c = ds.getConnection()) {
				throw new SQLException("Database connection error: Incorrect password.");
			} catch (Exception e) {
				return ResponseEntity.ok("Success");
			}
			// If the database connection is successful, perform your operations here.
			// Return a success response if everything is fine.
		} catch (SQLException e) {
			// Log the error for debugging purposes
			e.printStackTrace();
			// Return an error response with a 500 Internal Server Error status code and an
			// error message
			return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
					.body("Database connection error: Incorrect password or database issue.");
		}
	}

}
